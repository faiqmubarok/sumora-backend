// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String?
  // photo     String?
  photo     Json?
  phone     String?
  googleId  String? @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  devices Device[] @relation("UserDevices")
}

model Device {
  id        String   @id @default(uuid())
  userId    String?
  name      String   @unique
  qrcode    String?
  createdAt DateTime @default(now())

  user       User?        @relation("UserDevices", fields: [userId], references: [id], onDelete: SetNull)
  sensorData SensorData[]
}

model SensorData {
  id       String @id @default(uuid())
  deviceId String

  ph          Float
  chloromines Float
  solids      Float
  sulfate     Float
  createdAt   DateTime @default(now())

  device      Device       @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  predictions Prediction[]
}

model Prediction {
  id           String @id @default(uuid())
  sensorDataId String

  result String

  sensor SensorData @relation(fields: [sensorDataId], references: [id], onDelete: Cascade)
}
